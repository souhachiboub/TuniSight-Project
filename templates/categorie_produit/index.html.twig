{% extends 'squeletteboutique.html.twig' %}
  
{% block body %}



 


<!-- Vos styles personnalisés ici ... -->
<style>

  /* ... Vos styles déjà définis ... */
  .modal-content {
      border-radius: 10px;
      background: #ffffff;
      box-shadow: 0 4px 12px rgba(0, 0, 0, 0.1);
  }
  .custom-modal-header {
      padding: 1rem;
      background: #f9f9fb;
      border-bottom: none;
      display: flex;
      flex-direction: column;
      align-items: center;
      position: relative;
  }
  .custom-modal-header .modal-header-top {
      width: 100%;
      display: flex;
      justify-content: space-between;
      align-items: center;
  }
  .custom-modal-header .modal-dynamic-title {
      margin: 0;
      font-size: 1.2rem;
      font-weight: bold;
      color: #555;
      text-align: left;
  }
  .header-image img {
      width: 100%;
      height: auto;
      display: block;
  }
 
  .form-control::placeholder {
      font-size: 1rem;
      color: #aaa;
  }
  .modal-dialog {
      max-width: 600px;
  }
</style>
<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.2/css/all.min.css">

<div class="container mt-5">
  <!-- Bouton "Ajouter Catégorie" -->
  <div class="d-flex justify-content-end mb-3">
      <button class="btn btn-primary" onclick="openModal(null, '', '')">
          Ajouter Catégorie
      </button>
  </div>
<!-- Table de catégories -->
<div class="table-responsive">
<table class="table table-bordered text-center">
        <!-- En-tête du tableau -->
        <thead>
            <tr>
                <th><input type="checkbox" id="selectAll" onclick="toggleSelectAll(this)"></th>
                <th>Nom</th>
                <th>Description</th>
                <th>Actions</th>
            </tr>
        </thead>

        <!-- Corps du tableau -->
        <tbody>
            {% for categorie in categories %}
                <tr>
                    <!-- Case à cocher pour la sélection -->
                    <td>
                        <input type="checkbox" class="delete-checkbox" data-id="{{ categorie.id }}" onchange="toggleDeleteMultipleButton()">
                    </td>

                    <!-- Nom de la catégorie -->
                    <td>{{ categorie.nom }}</td>

                    <!-- Description de la catégorie (tronquée) -->
                    <td>
                        {{ categorie.description|length > 50 ? categorie.description|slice(0, 50) ~ '...' : categorie.description }}
                    </td>

                    <!-- Actions (Modifier, Voir, Supprimer) -->
                    <td>
                        <!-- Bouton "Modifier" -->
                        <button class="btn btn-outline-primary btn-sm" 
                            onclick="openModal(this.getAttribute('data-id'), this.getAttribute('data-nom'), this.getAttribute('data-description'))" 
                            data-id="{{ categorie.id }}" 
                            data-nom="{{ categorie.nom }}" 
                            data-description="{{ categorie.description }}">
                            <i class="fa fa-pencil"></i>
                        </button>

                        <!-- Bouton "Voir" -->
                        <button class="btn btn-outline-primary btn-sm" onclick="viewCategorie('{{ categorie.id }}')">
                            <i class="fa fa-eye"></i>
                        </button>

                        <!-- Bouton "Supprimer" -->
                        <button type="button" class="btn btn-danger btn-sm" onclick="confirmDeleteCategorie({{ categorie.id }})">
                            <i class="fa fa-trash"></i>
                        </button>
                    </td>
                </tr>
            {% endfor %}
        </tbody>
    </table>
</div>

<!-- Espace supplémentaire pour d'autres éléments -->
<div class="mt-3">
    <button id="deleteMultipleButton" class="btn btn-danger" onclick="confirmDeleteMultiple()" disabled>
        <i class="fa fa-trash"></i>
    </button>
</div>
















































<!-- Modal de création/modification -->
<div class="modal fade" id="categorieModallle" tabindex="-1" aria-labelledby="modalLabel" aria-hidden="true">
  <div class="modal-dialog">
      <div class="modal-content">
          <div class="modal-header custom-modal-header">
              <div class="modal-header-top">
                  <h5 id="modalTitle" class="modal-dynamic-title">Ajouter Catégorie</h5>
                  <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Fermer"></button>
              </div>
              <div class="header-image" style="margin-top: 0.5rem;">
                  <img src="/images/logo.png" alt="Logo">
              </div>
          </div>
          <div class="modal-body">
              <div id="errorContainer" class="alert alert-danger d-none"></div>
              <form id="categorieForm" novalidate>
                  <input type="hidden" id="categorieId">
                  <div class="mb-3">
                      <label for="nom" class="form-label">Nom</label>
                      <input type="text" class="form-control" id="nom" placeholder="Entrez le nom">
                  </div>
                  <div class="mb-3">
                      <label for="description" class="form-label">Description</label>
                      <textarea class="form-control" id="description" placeholder="Entrez la description"></textarea>
                  </div>
              </form>
          </div>
          <div class="modal-footer">
              <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Annuler</button>
              <button type="button" class="btn btn-primary" onclick="saveCategorie()">Enregistrer</button>
          </div>
      </div>
  </div>
</div>

<script>


function saveCategorie() {
    const id = document.getElementById('categorieId').value.trim();
    const nom = document.getElementById('nom').value.trim();
    const description = document.getElementById('description').value.trim();
    const errorContainer = document.getElementById('errorContainer');

    errorContainer.classList.add('d-none');
    errorContainer.innerHTML = '';

   
    const url = id ? `/categorie/produit/${id}/edit` : `/categorie/produit/new`; // URL dynamique
    const method = id ? 'PUT' : 'POST'; // Déterminer la méthode HTTP

    fetch(url, {
        method: method,
        headers: { 'Content-Type': 'application/json' },
        body: JSON.stringify({ nom, description })
    })
    .then(response => response.json())
    .then(data => {
        if (data.success) {
$('#categorieModallle').modal('hide'); // Fermer le modal de création/modif

// Déterminer le message de succès
const successMessage = id ? "Catégorie modifiée avec succès !" : "Catégorie ajoutée avec succès !";
document.getElementById('successMessage').innerText = successMessage;

// Afficher le modal de succès
var successModal = new bootstrap.Modal(document.getElementById('successModal'));
successModal.show();

// Recharger la page après un court délai
setTimeout(() => {
    location.reload();
}, 2000);
            location.reload(); // Recharger la page pour voir les changements
        } else {
            errorContainer.innerHTML = data.message;
            errorContainer.classList.remove('d-none');
        }
    })
    .catch(error => {
        console.error('Erreur:', error);
        errorContainer.innerHTML = "Une erreur est survenue.";
        errorContainer.classList.remove('d-none');
    });
}

// Ouvrir le modal pour création ou modification
function openModal(id = '', nom = '', description = '') {
    document.getElementById('categorieId').value = id;
    document.getElementById('nom').value = nom;
    document.getElementById('description').value = description;

    const errorContainer = document.getElementById('errorContainer');
    errorContainer.innerHTML = '';
    errorContainer.classList.add('d-none');

    document.getElementById('modalTitle').innerText = id ? "Modifier Catégorie" : "Ajouter Catégorie";

    var modal = new bootstrap.Modal(document.getElementById('categorieModallle'));
    modal.show();
}


</script>

























































































<!-- Modal de succès -->
<div class="modal fade" id="successModal" tabindex="-1" aria-labelledby="successModalLabel" aria-hidden="true">
  <div class="modal-dialog modal-dialog-centered">
      <div class="modal-content border-success">
          <div class="modal-header bg-success text-white">
              <h5 class="modal-title" id="successModalLabel">Succès</h5>
              <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Fermer"></button>
          </div>
          <div class="modal-body">
              <p id="successMessage"></p>
          </div>
      </div>
  </div>
</div>
<!-- Modal de vue -->
<div class="modal fade" id="viewModal" tabindex="-1" aria-labelledby="viewModalLabel" aria-hidden="true">
  <div class="modal-dialog">
      <div class="modal-content">
          <div class="modal-header">
              <h5 class="modal-title" id="viewModalLabel">Détails de la catégorie</h5>
              <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Fermer"></button>
          </div>
          <div class="modal-body">
              <h6 id="viewModalNom"></h6>
              <p id="viewModalDescription"></p>
          </div>
      </div>
  </div>
</div>
<!-- Modal de confirmation de suppression -->
<div class="modal fade" id="deleteConfirmModal" tabindex="-1" aria-labelledby="deleteConfirmLabel" aria-hidden="true">
  <div class="modal-dialog">
      <div class="modal-content">
          <div class="modal-header bg-danger text-white">
              <h5 class="modal-title" id="deleteConfirmLabel">Confirmer la suppression</h5>
              <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Fermer"></button>
          </div>
          <div class="modal-body">
              <p id="deleteConfirmMessage">Êtes-vous sûr de vouloir supprimer cette catégorie ?</p>
          </div>
          <div class="modal-footer">
              <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Annuler</button>
              <button type="button" class="btn btn-danger" id="confirmDeleteButton">Supprimer</button>
          </div>
      </div>
  </div>
</div>
<script>
function confirmDeleteCategorie(id) {
    currentDeletionAction = function() {
        fetch(`/categorie/produit/${id}/delete`, {
            method: 'DELETE',
            headers: { 'Content-Type': 'application/json' }
        })
        .then(response => response.json())
        .then(data => {
            if (data.success) {
                showSuccessModal(data.message);
            } else {
                alert(data.message);
            }
        })
        .catch(error => {
            console.error('Erreur lors de la suppression:', error);
        });
    };

    // Affiche le modal de confirmation
    var modalEl = document.getElementById('deleteConfirmModal');
    var modal = bootstrap.Modal.getInstance(modalEl) || new bootstrap.Modal(modalEl);
    modal.show();
}

  
  

  document.getElementById('confirmDeleteButton').addEventListener('click', function () {
      var modalEl = document.getElementById('deleteConfirmModal');
      var modal = bootstrap.Modal.getInstance(modalEl);
      modal.hide();
      if (currentDeletionAction) {
          currentDeletionAction();
          currentDeletionAction = null;
      }
  });
function toggleSelectAll(source) {
    const checkboxes = document.querySelectorAll('.delete-checkbox');
    checkboxes.forEach(checkbox => {
        checkbox.checked = source.checked;
    });
    toggleDeleteMultipleButton();
}


function toggleDeleteMultipleButton() {
    const selected = document.querySelectorAll('.delete-checkbox:checked').length;
    const deleteButton = document.getElementById('deleteMultipleButton');
    
    if (selected > 0) {
        deleteButton.style.display = "inline-block"; // Affiche le bouton
        deleteButton.disabled = false;
    } else {
        deleteButton.style.display = "none"; // Cache le bouton si aucune case cochée
        deleteButton.disabled = true;
    }
}


function confirmDeleteMultiple() {
    const selectedCheckboxes = document.querySelectorAll('.delete-checkbox:checked');
    const selectedIds = [...selectedCheckboxes].map(checkbox => checkbox.getAttribute('data-id'));

    if (selectedIds.length === 0) {
        alert("Veuillez sélectionner au moins une catégorie.");
        return;
    }

    currentDeletionAction = function() {
        fetch('/categorie/delete-multiple', {
            method: 'POST',
            headers: { 'Content-Type': 'application/json' },
            body: JSON.stringify({ ids: selectedIds })
        })
        .then(response => response.json())
        .then(data => {
            if (data.success) {
                showSuccessModal(`${selectedIds.length} catégorie(s) supprimée(s) avec succès !`);

                // Supprimer les lignes du tableau après succès
                selectedCheckboxes.forEach(checkbox => {
                    checkbox.closest('tr').remove();
                });

            } else {
                alert("Erreur lors de la suppression : " + data.message);
            }
        })
        .catch(error => {
            console.error('Erreur lors de la suppression multiple:', error);
        });
    };

    // Affiche le modal de confirmation
    let modalEl = document.getElementById('deleteConfirmModal');
    let modal = bootstrap.Modal.getInstance(modalEl) || new bootstrap.Modal(modalEl);
    modal.show();
}



  function showSuccessModal(message) {
      document.getElementById('successMessage').innerText = message;
      var modal = new bootstrap.Modal(document.getElementById('successModal'));
      modal.show();
      setTimeout(() => {
          modal.hide();
          location.reload();
      }, 2000);
  }
  function viewCategorie(id) {
      fetch(`/categorie/produit/${id}/view`)
      .then(response => response.json())
      .then(data => {
          document.getElementById('viewModalNom').innerText = "Nom: " + data.nom;
          document.getElementById('viewModalDescription').innerText = "Description: " + data.description;
          var modal = new bootstrap.Modal(document.getElementById('viewModal'));
          modal.show();
      })
      .catch(error => {
          alert("Erreur lors de la récupération des données.");
      });
  }
</script>

<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
{% endblock %}
